name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM

env:
  NODE_VERSION: '18.x'

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: pumpguard_integration
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Setup backend environment
        working-directory: backend
        run: |
          cp .env.example .env
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/pumpguard_integration" >> .env
          echo "JWT_SECRET=integration-test-secret" >> .env
          echo "PORT=3001" >> .env
          echo "NODE_ENV=test" >> .env

      - name: Setup frontend environment
        working-directory: frontend
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_API_URL=http://localhost:3001" >> .env.local
          echo "NODE_ENV=test" >> .env.local

      - name: Generate Prisma client
        working-directory: backend
        run: npm run prisma:generate

      - name: Run backend migrations
        working-directory: backend
        run: npm run prisma:migrate

      - name: Seed integration database
        working-directory: backend
        run: npm run prisma:seed

      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Start backend server
        working-directory: backend
        run: |
          npm start &
          sleep 10

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Start frontend server
        working-directory: frontend
        run: |
          npm start &
          sleep 15

      - name: Wait for services
        run: |
          npx wait-on http://localhost:3001/health
          npx wait-on http://localhost:3000

      - name: Run API integration tests
        working-directory: backend
        run: npm run test:integration

      - name: Run frontend E2E tests
        working-directory: frontend
        run: |
          npx playwright install
          npm run test:e2e

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results
          path: |
            backend/coverage/
            frontend/test-results/
            frontend/coverage/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install k6
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Run performance tests
        run: |
          k6 run tests/performance/load-test.js
        env:
          API_BASE_URL: ${{ secrets.BACKEND_STAGING_URL || 'http://localhost:3001' }}

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-test-results
          path: performance-results.json